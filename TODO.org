* Tanuki
** General Items
*** TODO Build a docker image for deployment to server
**** DONE resolve the ffmpeg issue using ffmpeg-static
**** DONE resolve leveldb startup error on macOS
#+BEGIN_SRC
error: database initialization error: message=IO error: tmp/database/leveldb: Invalid argument,
  type=OpenError, name=OpenError, cause=undefined, stack=OpenError: IO error: tmp/database/leveldb: Invalid argument
     at /src/node_modules/levelup/lib/levelup.js:91:23
     at /src/node_modules/deferred-leveldown/node_modules/abstract-leveldown/abstract-leveldown.js:39:16
     at /src/node_modules/deferred-leveldown/deferred-leveldown.js:19:21
     at /src/node_modules/leveldown/node_modules/abstract-leveldown/abstract-leveldown.js:39:16
#+END_SRC
***** normally runs as root user
***** files are owned by node:staff and -rw-r--r--
***** setting =USER node= does not help
***** seems like a known issue with vbox and leveldb use of mmap
***** DONE try using NFS volume
****** c.f. https://github.com/adlogix/docker-machine-nfs
#+BEGIN_SRC shell
$ brew install docker-machine-nfs
$ docker-machine start
$ docker-machine-nfs default
#+END_SRC

**** DONE configure tanuki for production environment
**** DONE delete =ecosystem.config.js=
**** TODO change provisioning to use docker
**** TODO How to deploy on server: =docker-compose -f docker-compose.yml -f production.yml up -d=
**** DONE delete =config/tanuki.rc=
**** TODO delete =graphql_ppx.exe= from provisioning
*** TODO Consider how to make thumbnail page responsive
**** Show 1, 2, 3, or more depending on browser width
**** Should be able to leverage CSS for this
*** TODO Update the modules with major version changes
*** TODO Debounce the form input validation (i.e. asset edit and search forms)
*** TODO Support searching the caption text
*** TODO Support wildcards in filename, mimetype (others?)
*** TODO Extract exact location information from images [0/4]
- [ ] Write a data migration to process existing assets
- [ ] Incoming needs to extract this information for new assets
- [ ] Existing location values should be stored in "label" field
- [ ] Exact location information should be stored separate from label

*** TODO Need a query to find image assets whose orientation is incorrect/unknown
*** TODO Asset preview page shows a broken link, should show placeholder image
*** TODO Thumbnail size cache population is noticably slow when selecting many assets
*** TODO When performing image manipulations, invoke =sharp.withMetadata()= to preserve metadata
*** TODO Use an =iframe= to preview Markdown generated as HTML
*** TODO Read [[https://github.com/MtDalPizzol/pouchdb-permissions][pouchdb-permissions]] for possible use in user/groups access
*** TODO Detect time zone offset in EXIF data
According to Wikipedia the 2.31 version of EXIF will support time-zone
information. Eventually, the application should be able to detect this and
include it in the database records.

: There is no way to record time-zone information along with the time, thus
: rendering the stored time ambiguous. However, time-zone information have
: been introduced recently by Exif version 2.31 (July 2016). Related tags are:
: "OffsetTime", "OffsetTimeOriginal" and "OffsetTimeDigitized".

** ReasonML rewrite
*** TODO Rewrite backend code in ReasonML
**** GraphQL portion
[[https://blog.ecliptic.io/a-reasonable-graphql-exploration-part-1-5651f75de497][ecliptic.io part 1]], [[https://blog.ecliptic.io/a-reasonable-graphql-exploration-part-2-3c3b811f7491][part 2]], [[https://blog.ecliptic.io/a-reasonable-graphql-exploration-part-3-b303b375ab23][part 3]], [[https://blog.ecliptic.io/a-reasonable-graphql-followup-192f6ec29550][follow-up]]
- shows how to write the GraphQL backend
- uses Node/Express too
- builds everything up, from types to encoders/decoders
- uses [[https://github.com/glennsl/bs-json][bs-json]] for JSON encode/decode

*** TODO Look at https://github.com/cristianoc/genType for JavaScript interop
*** TODO Consider how to organize webui code from the backend code
Presumably it will all eventually be written in ReasonML, how should the
webui and backend code be separated?

** Documentation
*** Case Sensitivity
- Data is stored as entered (case preservative)
- Attribute lists are all lowercased
- Search is always case insensitive

*** Date/Time values
- Uses 24 hour clock, displays using local time zone, stored as UTC
- [[http://www.unicode.org/reports/tr35/tr35-43/tr35-dates.html#Date_Format_Patterns][Date_Format_Patterns]]
