[package]
name = "tanuki"
version = "1.0.0"
authors = ["Nathan Fiedler <nathanfiedler@fastmail.fm>"]
edition = "2021"
description = "Personal digital asset management system."
repository = "https://github.com/nlfiedler/tanuki"
readme = "README.md"
keywords = ["assets", "photos", "videos"]
license = "MIT"
default-run = "tanuki"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
actix-cors = { version = "0.7.0", optional = true }
actix-files = { version = "0.6", optional = true }
actix-multipart = { version = "0.7.2", optional = true }
actix-web = { version = "4.0.1", optional = true, features = ["macros"] }
anyhow = "1.0.55"
base64 = "0.22.1"
chrono = { version = "0.4", features = ["serde"] }
console_log = "1.0"
console_error_panic_hook = "0.1"
dotenv = { version = "0.15.0", optional = true }
env_logger = { version = "0.11.0", optional = true }
futures = { version = "0.3.4", optional = true }
glob = { version = "0.3.1", optional = true }
gloo = "0.11.0"
http = { version = "1.0.0", optional = true }
image = { version = "0.25.1", optional = true }
juniper = { version = "0.16.1", features = ["chrono"], optional = true }
kamadak-exif = { version = "0.5.5", optional = true }
leptos = "0.6.15"
leptos_actix = { version = "0.6.15", optional = true }
leptos_meta = "0.6.15"
leptos_router = "0.6.15"
leptos-use = "0.13.5"
log = "0.4.8"
lru = { version = "0.12.1", optional = true }
mime = { version = "0.3.17", optional = true }
mime_guess = { version = "2.0.3", optional = true }
mokuroku = { version = "3.5.0", features = [
    "anyhow",
    "serde_cbor",
], optional = true }
mp4 = { version = "0.13.0", optional = true }
reqwest = { version = "0.12.4", optional = true }
riff = { version = "2.0.0", optional = true }
rocksdb = { version = "0.22.0", optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_cbor = "0.11.2"
serde_json = "1.0.128"
sha2 = { version = "0.10.1", optional = true }
tokio = { version = "1.36.0", features = ["full"], optional = true }
ulid = { version = "1.1.3", optional = true }
# leptos-use is hard-coded to wasm-bindgen 0.2.93
wasm-bindgen = "=0.2.93"
web-sys = { version = "0.3.70", features = [
    "File",
    "FileList",
    "FileReader",
    "FormData",
    "XmlHttpRequest",
    "XmlHttpRequestUpload",
] }

[dev-dependencies]
mockall = "0.13.0"
tempfile = "3.1.0"

[profile.release]
strip = "debuginfo"

[workspace]
exclude = ["healthcheck"]

[features]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
    "dep:actix-cors",
    "dep:actix-files",
    "dep:actix-multipart",
    "dep:actix-web",
    "dep:dotenv",
    "dep:env_logger",
    "dep:futures",
    "dep:glob",
    "dep:image",
    "dep:juniper",
    "dep:kamadak-exif",
    "dep:leptos_actix",
    "dep:lru",
    "dep:mime_guess",
    "dep:mime",
    "dep:mokuroku",
    "dep:mp4",
    "dep:reqwest",
    "dep:riff",
    "dep:rocksdb",
    "dep:sha2",
    "dep:tokio",
    "dep:ulid",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos-use/ssr",
    "leptos-use/actix",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "tanuki"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# Sets the name of the binary target used.
#
# Optional, only necessary if the bin-package defines more than one target. Can also be set with the LEPTOS_BIN_TARGET=name env var
bin-target = "tanuki"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
